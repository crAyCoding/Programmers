#include <string>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

int solution(vector<vector<int>> jobs) {
    int answer = 0;
    sort(jobs.begin(),jobs.end());
    priority_queue<int,vector<int>,greater<int>> pq;
    int tested = 0, temp = 0, t = 0;
    while(tested < jobs.size())
    {
        for(int i=temp;i<jobs.size();i++)
        {
            if(jobs[i][0]<=t)
            {
                pq.push(jobs[i][1]);
                answer += t - jobs[i][0];
                temp++;
            }
        }
        if(pq.empty() && temp < jobs.size())
        {
            t = jobs[temp][0];
            continue;
        }
        answer += pq.top();
        t += pq.top();
        answer += (pq.size() - 1) * pq.top();
        pq.pop();
        tested++;
    }
    return answer / jobs.size();
}
