#include <string>
#include <vector>
#include <queue>
#include <algorithm>
#include <cstring>
#include <iostream>

using namespace std;

vector<vector<int>> arr(20001);
int dist[20001] = {0,};
bool visited[20001];

int solution(int n, vector<vector<int>> edge) {
    memset(visited,false,sizeof(visited));
    dist[1] = 1;
    visited[1] = true;
    queue<int> q,result;
    for(vector<int> v : edge)
    {
        arr[v[1]].push_back(v[0]);
        arr[v[0]].push_back(v[1]);
    }
    q.push(1);
    while(!q.empty())
    {
        result = q;
        int size = q.size();
        for(int i=0;i<size;i++)
        {
            int k = q.front();
            q.pop();
            for(int t : arr[k])
            {
                if(visited[t]) continue;
                q.push(t);
                visited[t] = true;
            }
        }
    }
    return result.size();
}
