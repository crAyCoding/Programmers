#include <string>
#include <vector>
#include <algorithm>
#include <cmath>

using namespace std;

long long solution(string expression) {
    long long answer = 0;
    vector<int> exp;
    vector<int> op = {42,43,45};
    string str = "";
    for(int i=0;i<expression.size();i++)
    {
        if(expression[i] == '*' || expression[i] == '+' || expression[i] == '-')
        {
            exp.push_back(stoi(str));
            exp.push_back(expression[i]);
            str = "";
        }
        else
        {
            str += expression[i];
        }
        if(i==expression.size()-1) exp.push_back(stoi(str));
    }
    do
    {
        long long num = 0;
        vector<long long> kk;
        for(int i=0;i<exp.size();i++)
        {
            kk.push_back(exp[i]);
        }
        vector<long long> ss;
        for(int i=0;i<kk.size();i++)
        {
            if(kk[i-1]==op[0] && i%2==0)
            {
                ss.pop_back();
                if(op[0]==43) num = ss.back() + kk[i];
                else if(op[0]==42) num = ss.back() * kk[i];
                else num = ss.back() - kk[i];
                ss.pop_back();
                ss.push_back(num);
            }
            else ss.push_back(kk[i]);
        }
        kk = ss;   ss.clear();
        for(int i=0;i<kk.size();i++)
        {
            if(kk[i-1]==op[1] && i%2==0)
            {
                ss.pop_back();
                if(op[1]==43) num = ss.back() + kk[i];
                else if(op[1]==42) num = ss.back() * kk[i];
                else num = ss.back() - kk[i];
                ss.pop_back();
                ss.push_back(num);
            }
            else ss.push_back(kk[i]);
        }
        kk = ss;   ss.clear();
        for(int i=0;i<kk.size();i++)
        {
            if(kk[i-1]==op[2] && i%2==0)
            {
                ss.pop_back();
                if(op[2]==43) num = ss.back() + kk[i];
                else if(op[2]==42) num = ss.back() * kk[i];
                else num = ss.back() - kk[i];
                ss.pop_back();
                ss.push_back(num);
            }
            else ss.push_back(kk[i]);
        }
        if(answer < abs(ss[0])) answer = abs(ss[0]);
    }while(next_permutation(op.begin(),op.end()));
    
    
    return answer;
}
